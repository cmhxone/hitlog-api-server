/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'idea'
    id 'eclipse'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'    
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Armeria dependencies
    [
        'armeria',
        'armeria-logback'
    ].each {
        implementation "com.linecorp.armeria:${it}:1.23.1"
    }

    // Logging
    runtimeOnly 'ch.qos.logback:logback-classic:1.4.6'
    runtimeOnly 'org.slf4j:log4j-over-slf4j:2.0.7'

    // Apache commons dependencies
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'org.apache.commons:commons-configuration2:2.8.0'

    // Bouncy Castle for PBES2 algorithm
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'

    // Netty Tomcat native Boring SSL static dependencies
    runtimeOnly 'io.netty:netty-tcnative-boringssl-static:2.0.59.Final'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'com.ivr.App'
    applicationDefaultJvmArgs = ['-Dfile.encoding=UTF-8']
}

shadowJar {
    archiveBaseName.set('hitlog-api-server')
    archiveClassifier.set('RELEASE')
    archiveVersion.set('1.0.0')
    mergeServiceFiles()
}

tasks.withType(JavaCompile) {
    // add some compile arguments in here
    // options.compilerArgs += ''
    options.encoding = "UTF-8"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
